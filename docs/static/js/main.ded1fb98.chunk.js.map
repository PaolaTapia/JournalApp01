{"version":3,"sources":["firebase/firebase-config.js","components/notes/NotesAppBar.js","components/notes/NoteScreen.js","types/types.js","actions/ui.js","actions/auth.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/Sidebar.js","components/journal/JournalScreen.js","hooks/useForm.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","reducers/uiReducer.js","store/store.js","reducers/authReducer.js","JournalApp.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firestore","googleAuthProvider","auth","GoogleAuthProvider","NotesAppBar","className","NoteScreen","type","placeholder","autoComplete","src","alt","types","login","logout","uiSetError","uiRemoveError","uiStartLoading","uiFinishLoading","setError","err","payload","finishLoading","startLoginEmailPassword","email","password","dispatch","signInWithEmailAndPassword","then","user","uid","displayName","catch","e","console","log","Swal","fire","message","JournalEntry","style","backgroundSize","backgroundImage","JournalEntries","map","value","Sidebar","useDispatch","onClick","signOut","JournalScreen","useForm","initialState","useState","values","setValues","reset","handledInputChange","target","name","LoginScreen","loading","useSelector","state","ui","formValues","handleInputChange","onSubmit","preventDefault","onChange","disabled","signInWithPopup","to","RegisterScreen","msgError","password2","isFormValid","trim","length","validator","isEmail","createUserWithEmailAndPassword","a","updateProfile","startRegisterWithEmailPasswordName","AuthRouter","exact","path","component","PrivateRoute","isAuthenticated","Component","rest","props","PublicRoute","AppRouter","checking","setChecking","isLoggedIn","setIsLoggedIn","useEffect","onAuthStateChanged","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","Login","Logout","store","createStore","applyMiddleware","thunk","JournalApp","ReactDOM","render","document","getElementById"],"mappings":"qOAaGA,IAASC,cATW,CAClBC,OAAQ,0CACRC,WAAY,kCACZC,YAAa,yCACbC,UAAW,kBACXC,cAAe,8BACfC,kBAAmB,eACnBC,MAAO,8CAIAR,IAASS,YAAlB,IACMC,EAAoB,IAAIV,IAASW,KAAKC,mBCdlCC,EAAc,WACtB,OACK,sBAAKC,UAAU,gBAAf,UACK,yDAEA,gCACK,wBAAQA,UAAU,MAAlB,qBAIA,wBAAQA,UAAU,MAAlB,yBCTPC,EAAa,WACrB,OACK,sBAAKD,UAAU,qBAAf,UACK,cAAC,EAAD,IACA,sBAAKA,UAAU,gBAAf,UACK,uBACAE,KAAK,OACLC,YAAY,qBACZH,UAAU,qBACVI,aAAa,QAGb,0BACAD,YAAY,sBACZH,UAAU,mBAGV,qBAAKA,UAAU,cAAf,SACK,qBACAK,IAAI,0EACJC,IAAI,qB,0CCvBhBC,EAAM,CACdC,MAAO,eACPC,OAAQ,gBAERC,WAAY,iBACZC,cAAe,oBAEfC,eAAgB,qBAChBC,gBAAiB,uBCNTC,EAAS,SAACC,GAAD,MAAQ,CACzBb,KAAMK,EAAMG,WACZM,QAASD,IAWDE,EAAc,iBAAK,CAC3Bf,KAAMK,EAAMM,kBCTJK,EAAwB,SAACC,EAAOC,GACxC,OAAO,SAACC,GAEHA,EDCqB,CAC1BnB,KAAMK,EAAMK,iBCAP1B,IAASW,OAAOyB,2BAA2BH,EAAOC,GACjDG,MAAK,YAAW,IAATC,EAAQ,EAARA,KACHH,EACKb,EAAMgB,EAAKC,IAAKD,EAAKE,cAE1BL,EAASJ,QAEbU,OAAM,SAAAC,GACFC,QAAQC,IAAIF,GACZP,EAASJ,KACTc,IAAKC,KAAK,QAASJ,EAAEK,QAAS,cAoChCzB,EAAM,SAACiB,EAAKC,GAAN,MAAuB,CACrCxB,KAAMK,EAAMC,MACZQ,QAAS,CACJS,MACAC,iBAYGjB,EAAS,iBAAO,CACxBP,KAAMK,EAAME,SCzEJyB,EAAe,WAC1B,OACE,sBAAKlC,UAAU,iBAAf,UACE,qBACEA,UAAU,yBACVmC,MAAO,CACLC,eAAgB,QAChBC,gBACE,2FAIN,sBAAKrC,UAAU,sBAAf,UACI,mBAAGA,UAAU,uBAAb,6BACA,mBAAGA,UAAU,yBAAb,yEAKF,sBAAKA,UAAU,0BAAf,UACE,0CACA,2CCpBGsC,EAAiB,WAEzB,OACK,qBAAKtC,UAAU,mBAAf,SAFS,CAAC,EAAE,EAAE,EAAE,EAAE,GAIAuC,KAAI,SAAAC,GAAK,OAClB,cAAC,EAAD,GAAmBA,SCJzBC,EAAU,WAEjB,IAAMpB,EAAWqB,cAMlB,OACK,wBAAO1C,UAAU,mBAAjB,UACA,sBAAKA,UAAU,yBAAf,UACK,qBAAIA,UAAU,OAAd,UACK,mBAAGA,UAAU,gBACb,6CAEV,wBACKA,UAAU,MACV2C,QAbY,WACpBtB,GHyDI,SAACA,GACFnC,IAASW,OAAO+C,UAEhBvB,EAASZ,SGlDT,uBAKA,sBAAKT,UAAU,qBAAf,UACK,mBAAGA,UAAU,+BACb,6CAEL,cAAC,EAAD,QCxBG6C,EAAgB,WACxB,OACK,sBAAK7C,UAAU,wBAAf,UACM,cAAC,EAAD,IACK,+BAGG,cAAC,EAAD,U,eCRX8C,EAAU,WAAsB,IAArBC,EAAoB,uDAAP,GAAO,EAIXC,mBAASD,GAJE,mBAIhCE,EAJgC,KAIxBC,EAJwB,KAMjCC,EAAO,WACRD,EAAUH,IAGTK,EAAoB,SAAC,GAAY,IAAXC,EAAU,EAAVA,OACvBH,EAAU,2BACFD,GADC,kBAEHI,EAAOC,KAAOD,EAAOb,UAIhC,MAAO,CAACS,EAAQG,EAAoBD,ICf5BI,EAAc,WACzB,IAAMlC,EAAWqB,cACVc,EAASC,aAAY,SAAAC,GAAK,OAAEA,EAAMC,MAAlCH,QAFwB,EAISV,EAAQ,CAC9C3B,MAAO,iBACPC,SAAU,WANmB,mBAIxBwC,EAJwB,KAIZC,EAJY,KASvB1C,EAAoByC,EAApBzC,MAAOC,EAAawC,EAAbxC,SAUf,OACE,qCACE,oBAAIpB,UAAU,aAAd,qBAEA,uBAAM8D,SAZU,SAAClC,GACnBA,EAAEmC,iBACF1C,EAASH,EAAwBC,EAAOC,KAUtC,UACE,uBACElB,KAAK,OACLC,YAAY,QACZmD,KAAK,QACLtD,UAAU,cACVI,aAAa,MACboC,MAAOrB,EACP6C,SAAUH,IAGZ,uBACE3D,KAAK,WACLC,YAAY,WACZmD,KAAK,WACLtD,UAAU,cACVI,aAAa,MACboC,MAAOpB,EACP4C,SAAUH,IAGZ,wBACE3D,KAAK,SACLF,UAAU,4BACViE,SAAUT,EAHZ,mBAMA,uBAEA,gCACE,2DAEA,sBACExD,UAAU,aACV2C,QAzCc,WACtBtB,GNyBQ,SAACA,GACHnC,IAASW,OAAOqE,gBAAgBtE,GAC/B2B,MAAK,YAAW,IAATC,EAAQ,EAARA,KACHH,EACKb,EAAMgB,EAAKC,IAAKD,EAAKE,qBMS/B,UAIE,qBAAK1B,UAAU,sBAAf,SACE,qBACEA,UAAU,cACVK,IAAI,8EACJC,IAAI,oBAGR,mBAAGN,UAAU,WAAb,SACE,yDAIJ,cAAC,IAAD,CAAMA,UAAU,YAAYmE,GAAG,iBAA/B,0C,iBCrEGC,EAAiB,WAE5B,IAAM/C,EAAWqB,cACV2B,EAAYZ,aAAa,SAAAC,GAAK,OAAIA,EAAMC,MAAxCU,SACPxC,QAAQC,IAAIuC,GAJsB,MAOMvB,EAAQ,CAC9CQ,KAAK,QACLnC,MAAO,iBACPC,SAAU,SACVkD,UAAW,WAXqB,mBAO3BV,EAP2B,KAOfC,EAPe,KAc1BP,EAAqCM,EAArCN,KAAMnC,EAA+ByC,EAA/BzC,MAAOC,EAAwBwC,EAAxBxC,SAAUkD,EAAcV,EAAdU,UAW3BC,EAAc,WAElB,OAA0B,IAAvBjB,EAAKkB,OAAOC,QACbpD,EAASP,EAAS,sBACX,GACE4D,IAAUC,QAAQxD,GAGnBC,IAAWkD,GAAalD,EAASqD,OAAS,GAClDpD,EAASP,EAAS,kEACX,IAGTO,ERvC4B,CACzBnB,KAAMK,EAAMI,iBQuCR,IARLU,EAASP,EAAS,wBACX,IAUN,OACL,qCACS,4CAEA,uBAAMgD,SA7BQ,SAAClC,GACtBA,EAAEmC,iBACCQ,KACDlD,EPC4C,SAACF,EAAOC,EAASkC,GACjE,OAAM,SAACjC,GACFnC,IAASW,OAAO+E,+BAA+BzD,EAAOC,GACrDG,KADD,uCACM,6BAAAsD,EAAA,6DAAOrD,EAAP,EAAOA,KAAP,SACKA,EAAKsD,cAAc,CAACpD,YAAa4B,IADtC,OAEDzB,QAAQC,IAAIN,GACZH,EACKb,EAAMgB,EAAKC,IAAKD,EAAKE,cAJzB,2CADN,uDAQCC,OAAM,SAAAC,GACFC,QAAQC,IAAIF,GACZG,IAAKC,KAAK,QAASJ,EAAEK,QAAS,aOb3B8C,CAAmC5D,EAAOC,EAAUkC,KA0BxD,UAEIe,GAEA,qBAAKrE,UAAU,oBAAf,SACEqE,IAIN,uBACEnE,KAAK,OACLC,YAAY,OACZmD,KAAK,OACLtD,UAAU,cACVI,aAAa,MACboC,MAAOc,EACPU,SAAUH,IAGV,uBACA3D,KAAK,OACLC,YAAY,QACZmD,KAAK,QACLtD,UAAU,cACVI,aAAa,MACboC,MAAOrB,EACP6C,SAAUH,IAGV,uBACA3D,KAAK,WAAWC,YAAY,WAAWmD,KAAK,WAC5CtD,UAAU,cACVI,aAAa,MACboC,MAAOpB,EACP4C,SAAUH,IAGX,uBACC3D,KAAK,WAAWC,YAAY,UAAUmD,KAAK,YAC3CtD,UAAU,cACVI,aAAa,MACboC,MAAO8B,EACPN,SAAUH,IAGV,wBACC3D,KAAK,SACLF,UAAU,iCAFX,uBAKA,uBAEA,8BACE,cAAC,IAAD,CACAA,UAAU,YACVmE,GAAG,cAFH,2CCtGAa,EAAa,WACxB,OACE,qBAAKhF,UAAU,aAAf,SACE,qBAAKA,UAAU,sBAAf,SACE,eAAC,IAAD,WAaE,cAAC,IAAD,CAAOiF,OAAK,EAACC,KAAK,cAAcC,UAAW5B,IAE3C,cAAC,IAAD,CAAO0B,OAAK,EAACC,KAAK,iBAAiBC,UAAWf,IAC9C,cAAC,IAAD,CAAUD,GAAG,2B,QCrBViB,EAAe,SAAC,GAItB,IAHFC,EAGC,EAHDA,gBACWC,EAEV,EAFDH,UACGI,EACF,+CAGD,OACE,cAAC,IAAD,2BAAWA,GAAX,IACGJ,UAAW,SAACK,GAAD,OACRH,EACI,cAACC,EAAD,eAAeE,IACf,cAAC,IAAD,CAAUrB,GAAG,qBCZjBsB,EAAc,SAAC,GAIrB,IAHFJ,EAGC,EAHDA,gBACWC,EAEV,EAFDH,UACGI,EACF,+CAED,OACK,cAAC,IAAD,2BAAWA,GAAX,IACKJ,UAAW,SAACK,GAAD,OACJH,EAEM,cAAC,IAAD,CAAUlB,GAAG,MADb,cAACmB,EAAD,eAAeE,SCH9BE,EAAY,WAEtB,IAAMrE,EAAWqB,cAFW,EAIIM,oBAAS,GAJb,mBAIrB2C,EAJqB,KAIXC,EAJW,OAKQ5C,oBAAS,GALjB,mBAKrB6C,EALqB,KAKTC,EALS,KAkB7B,OAXAC,qBAAU,WACR7G,IAASW,OAAOmG,oBAAmB,SAACxE,IAClC,OAAGA,QAAH,IAAGA,OAAH,EAAGA,EAAMC,MACPJ,EAASb,EAAMgB,EAAKC,IAAKD,EAAKE,cAC9BoE,GAAc,IACTA,GAAc,GAErBF,GAAY,QAEb,CAACvE,EAAUuE,EAAaE,IAExBH,EAEC,2CAMF,cAAC,IAAD,UACE,8BACE,eAAC,IAAD,WACE,cAAC,EAAD,CACKT,KAAK,QACLC,UAAWH,EACXK,gBAAiBQ,IAEtB,cAAC,EAAD,CACEZ,OAAK,EAACC,KAAK,IACXC,UAAWtC,EACXwC,gBAAiBQ,IAEnB,cAAC,IAAD,CAAU1B,GAAG,wB,gBChDjBpB,EAAc,CACfS,SAAS,EACTa,SAAU,MCCT4B,EAAsC,qBAAXC,QAA0BA,OAAOC,sCAAyCC,IAGrGC,EAASC,YAAgB,CAC1BzG,KCAoB,WAAqB,IAApB6D,EAAmB,uDAAb,GAAI6C,EAAS,uCAExC,OAAQA,EAAOrG,MACV,KAAKK,EAAMiG,MACN,MAAM,CACF/E,IAAK8E,EAAOvF,QAAQS,IACpB6B,KAAMiD,EAAOvF,QAAQU,aAE9B,KAAKnB,EAAMkG,OACX,MAAM,GAEN,QACK,OAAO/C,IDXjBC,GDHoB,WAAkC,IAAjCD,EAAgC,uDAAzBX,EAAcwD,EAAW,uCACrD,OAAQA,EAAOrG,MACV,KAAKK,EAAMG,WACN,OAAO,2BACCgD,GADR,IAEKW,SAAUkC,EAAOvF,UAE3B,KAAKT,EAAMI,cACD,OAAO,2BACC+C,GADR,IAEKW,SAAU,OAEzB,KAAK9D,EAAMK,eACN,kCACQ8C,GADR,IAEKF,SAAS,IAEnB,KAAKjD,EAAMM,gBACN,kCACQ6C,GADR,IAEKF,SAAS,IAGnB,QACK,OAAOE,MClBTgD,EAAOC,YAAYN,EAC3BJ,EACKW,YAAgBC,OETbC,EAAa,WACrB,OACK,cAAC,IAAD,CAAUJ,MAAOA,EAAjB,SACI,cAAC,EAAD,O,OCJdK,IAASC,OAEL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.ded1fb98.chunk.js","sourcesContent":["import firebase from 'firebase/app'; \r\nimport 'firebase/firestore'; \r\nimport 'firebase/auth'; \r\n\r\nconst firebaseConfig = {\r\n     apiKey: \"AIzaSyAui4BunSA5KW3-F6xC8FA-STiOA6p-QLg\",\r\n     authDomain: \"react-app-demos.firebaseapp.com\",\r\n     databaseURL: \"https://react-app-demos.firebaseio.com\",\r\n     projectId: \"react-app-demos\",\r\n     storageBucket: \"react-app-demos.appspot.com\",\r\n     messagingSenderId: \"658327330118\",\r\n     appId: \"1:658327330118:web:c35bd775560210730a5947\"\r\n   };\r\n   firebase.initializeApp(firebaseConfig);\r\n\r\n   const db=firebase.firestore(); \r\n   const googleAuthProvider= new firebase.auth.GoogleAuthProvider(); \r\n\r\n   export {\r\n        db,\r\n        googleAuthProvider, \r\n        firebase\r\n\r\n   }","import React from 'react'\r\n\r\nexport const NotesAppBar = () => {\r\n     return (\r\n          <div className=\"notes__appbar\">\r\n               <span>28 de agostos de 2020</span>\r\n\r\n               <div>\r\n                    <button className=\"btn\">\r\n                         Picture\r\n                    </button>\r\n\r\n                    <button className=\"btn\">\r\n                         Save\r\n                    </button>\r\n\r\n               </div>\r\n               \r\n          </div>\r\n     )\r\n}\r\n","import React from 'react'\r\nimport { NotesAppBar } from './NotesAppBar'\r\n\r\nexport const NoteScreen = () => {\r\n     return (\r\n          <div className=\"notes_main-content\">\r\n               <NotesAppBar/>\r\n               <div className=\"notes_content\">\r\n                    <input\r\n                    type=\"text\"\r\n                    placeholder=\"Some awesome title\"\r\n                    className=\"notes__title-input\"\r\n                    autoComplete=\"off\"\r\n                    />\r\n\r\n                    <textarea\r\n                    placeholder=\"What happened today\"\r\n                    className=\"notes_textarea\"\r\n                    ></textarea>\r\n\r\n                    <div className=\"notes_image\">\r\n                         <img \r\n                         src=\"https://cdn.pixabay.com/photo/2012/08/27/14/19/mountains-55067__340.png\"\r\n                         alt=\"paisaje\"\r\n                         />\r\n\r\n                    </div>\r\n\r\n                    \r\n               </div>\r\n          </div>\r\n     )\r\n}\r\n","export const types={\r\n     login: '[auth] Login', \r\n     logout: '[auth] Logout', \r\n     \r\n     uiSetError: '[UI] set Error',\r\n     uiRemoveError: '[UI] Remove Error',\r\n\r\n     uiStartLoading: '[UI] Start loading',\r\n     uiFinishLoading: '[UI] Finish loading',\r\n\r\n}","import { types } from \"../types/types\";\r\n\r\nexport const setError=(err)=>({\r\n     type: types.uiSetError, \r\n     payload: err\r\n}); \r\n\r\nexport const removeError=()=>({\r\n     type: types.uiRemoveError \r\n     \r\n}); \r\nexport const startLoading=()=>({\r\n     type: types.uiStartLoading\r\n     \r\n}); \r\nexport const finishLoading=()=>({\r\n     type: types.uiFinishLoading     \r\n}); \r\n\r\n","import Swal from 'sweetalert2'\r\n\r\nimport {firebase, googleAuthProvider} from '../firebase/firebase-config'; \r\nimport { types } from \"../types/types\";\r\nimport { finishLoading, startLoading } from \"./ui\";\r\n\r\n//una accion\r\nexport const startLoginEmailPassword=(email, password) =>{\r\n     return (dispatch) => {\r\n\r\n          dispatch(startLoading());  \r\n          \r\n          firebase.auth().signInWithEmailAndPassword(email, password)\r\n          .then(({user})=>{\r\n               dispatch(\r\n                    login(user.uid, user.displayName)                 \r\n               ); \r\n               dispatch(finishLoading());  \r\n          })\r\n          .catch(e=> {\r\n               console.log(e); \r\n               dispatch(finishLoading());  \r\n               Swal.fire('Error', e.message, 'error');\r\n          })          \r\n          //dispatch(login (email,password));\r\n          \r\n     }     \r\n}\r\n\r\nexport const startRegisterWithEmailPasswordName=(email, password,name)=> {\r\nreturn(dispatch) =>{\r\n     firebase.auth().createUserWithEmailAndPassword(email, password)\r\n     .then(async({user})=>{\r\n          await user.updateProfile({displayName: name}); \r\n          console.log(user);          \r\n          dispatch(\r\n               login(user.uid, user.displayName) \r\n          ); \r\n     })\r\n     .catch(e=> {\r\n          console.log(e);\r\n          Swal.fire('Error', e.message, 'error');\r\n     })\r\n} \r\n}\r\n\r\n//otra accion\r\nexport const startGoogleLogin =()=>{\r\n     return (dispatch) => {\r\n          firebase.auth().signInWithPopup(googleAuthProvider)\r\n          .then(({user})=>{\r\n               dispatch(\r\n                    login(user.uid, user.displayName)\r\n               )\r\n          }); \r\n     }\r\n}\r\n\r\nexport const login=(uid, displayName) => ({\r\n     type: types.login, \r\n     payload: {\r\n          uid,\r\n          displayName\r\n     }\r\n})\r\n\r\nexport const startLogout = () => {\r\n     return(dispatch) => {\r\n          firebase.auth().signOut(); \r\n\r\n          dispatch(logout());\r\n     }\r\n}\r\n\r\nexport const logout = () => ({\r\n     type: types.logout\r\n})","import React from \"react\";\r\n\r\nexport const JournalEntry = () => {\r\n  return (\r\n    <div className=\"journal__entry\">\r\n      <div\r\n        className=\"journal__entry-picture\"\r\n        style={{\r\n          backgroundSize: \"cover\",\r\n          backgroundImage:\r\n            \"url(https://image.freepik.com/vector-gratis/fondo-paisaje-arboles-aves_1048-1242.jpg)\",\r\n        }}\r\n      > \r\n      </div>\r\n      <div className=\"journal__entry-body\">\r\n          <p className=\"journal__entry-title\">Un nuevo día</p>\r\n          <p className=\"journal__entry-content\">\r\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit.\r\n          </p>\r\n        </div>\r\n\r\n        <div className=\"journal__entry-date-box\">\r\n          <span>Monday</span>\r\n          <h4>28</h4>\r\n        </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react'\r\nimport { JournalEntry } from './JournalEntry'\r\n\r\nexport const JournalEntries = () => {\r\n     const entries=[1,2,3,4,5];\r\n     return (\r\n          <div className=\"journal__entries\">\r\n               {\r\n                    entries.map(value=>(\r\n                   <JournalEntry key={value}/> \r\n                    ))\r\n               }\r\n          </div>\r\n     )\r\n}\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { startLogout } from '../../actions/auth';\r\nimport { JournalEntries } from './JournalEntries';\r\n\r\nexport const Sidebar = () => {\r\n\r\n      const dispatch = useDispatch();\r\n\r\n      const hanldeLogout = () => {\r\n       dispatch(startLogout()); \r\n      }\r\n\r\n     return (\r\n          <aside className=\"journal__sidebar\">\r\n          <div className=\"journal_sidebar-navbar\">\r\n               <h3 className=\"mt-5\">\r\n                    <i className=\"far fa-moon\"/>\r\n                    <span> Paola</span>\r\n               </h3>\r\n          <button \r\n               className=\"btn\"\r\n               onClick={hanldeLogout}\r\n          >Logout</button>\r\n          </div>   \r\n          <div className=\"journal__new-entry\">\r\n               <i className=\"far fa-calendar-plus fa-5x\"></i>\r\n               <p>New Entry</p>\r\n          </div>   \r\n          <JournalEntries/>       \r\n          </aside>\r\n     )\r\n}\r\n","import React from 'react';\r\nimport { NoteScreen } from '../notes/NoteScreen';\r\nimport { NothingSelected } from './NothingSelected';\r\nimport { Sidebar } from './Sidebar';\r\n\r\nexport const JournalScreen = () => {\r\n     return (\r\n          <div className=\"journal__main-content\">\r\n                <Sidebar/>\r\n                     <main>\r\n                        {/* <NothingSelected/>*/}  \r\n\r\n                        <NoteScreen/>\r\n                     </main>               \r\n           \r\n          </div>\r\n     )\r\n}\r\n","import { useState } from \"react\"; \r\n\r\n//recibe un objeto, las propiedades son un campo de un formulario\r\n\r\nexport const useForm = (initialState={}) => {\r\n\r\n     //Aquí podría mandar datos de validación\r\n    \r\n     const [values, setValues] = useState(initialState); \r\n\r\n     const reset =()=> {\r\n          setValues(initialState); \r\n     }\r\n\r\n     const handledInputChange= ({target})=>{     \r\n          setValues({\r\n               ...values, \r\n               [target.name]: target.value\r\n          });           \r\n     }\r\n\r\n     return [values, handledInputChange, reset]; \r\n\r\n}","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { startLoginEmailPassword, startGoogleLogin } from \"../../actions/auth\";\r\nimport { useForm } from \"../../hooks/useForm\";\r\n\r\nexport const LoginScreen = () => {\r\n  const dispatch = useDispatch();\r\n  const {loading}=useSelector(state=>state.ui); \r\n\r\n  const [formValues, handleInputChange] = useForm({\r\n    email: 'mail@gmail.com', \r\n    password: \"123456\",\r\n  });\r\n\r\n  const { email, password } = formValues;\r\n\r\n  const handleLogin = (e) => {\r\n    e.preventDefault();\r\n    dispatch(startLoginEmailPassword(email, password));\r\n  };\r\n\r\n  const handleGoogleLogin=()=>{\r\n    dispatch(startGoogleLogin ());\r\n  }\r\n  return (\r\n    <>\r\n      <h3 className=\"auth_title\"> Login </h3>\r\n\r\n      <form onSubmit={handleLogin}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Email\"\r\n          name=\"email\"\r\n          className=\"auth__input\"\r\n          autoComplete=\"off\"\r\n          value={email}\r\n          onChange={handleInputChange}\r\n        />\r\n\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          name=\"password\"\r\n          className=\"auth__input\"\r\n          autoComplete=\"off\"\r\n          value={password}\r\n          onChange={handleInputChange}\r\n        />\r\n\r\n        <button \r\n          type=\"submit\" \r\n          className=\"btn btn-primary btn-block\"\r\n          disabled={loading}\r\n        >Login</button>\r\n\r\n        <hr />\r\n\r\n        <div>\r\n          <p>Login with social networks</p>\r\n\r\n          <div \r\n            className=\"google-btn\"\r\n            onClick={handleGoogleLogin}          \r\n          >\r\n            <div className=\"google-icon-wrapper\">\r\n              <img\r\n                className=\"google-icon\"\r\n                src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\"\r\n                alt=\"google button\"\r\n              />\r\n            </div>\r\n            <p className=\"btn-text\">\r\n              <b>Sign in with google</b>\r\n            </p>\r\n          </div>\r\n\r\n          <Link className=\"link mt-5\" to=\"/auth/register\">            \r\n            Create new account\r\n          </Link>\r\n        </div>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useForm } from \"../../hooks/useForm\";\r\nimport validator from 'validator';\r\nimport { removeError, setError } from '../../actions/ui';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startRegisterWithEmailPasswordName } from '../../actions/auth';\r\n\r\nexport const RegisterScreen = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  const {msgError} = useSelector( state => state.ui ); \r\n  console.log(msgError);\r\n\r\n  \r\n  const [formValues, handleInputChange] = useForm({\r\n    name:'Paola', \r\n    email: 'mail@gmail.com', \r\n    password: '123456',\r\n    password2: '123456'\r\n  });\r\n\r\n  const { name, email, password, password2 } = formValues;\r\n\r\n\r\nconst handleRegister = (e)=> {\r\n  e.preventDefault(); \r\n  if(isFormValid()){\r\n    dispatch(startRegisterWithEmailPasswordName(email, password, name)); \r\n    //removeError(); \r\n  }\r\n}\r\n\r\nconst isFormValid = ()=>{\r\n\r\n  if(name.trim().length === 0){\r\n    dispatch(setError('Name is required')); \r\n    return false; \r\n  } else if(!validator.isEmail(email)){\r\n    dispatch(setError('Email is not valid')); \r\n    return false; \r\n  } else if(password!==password2 || password.length < 5){\r\n    dispatch(setError('Password should be at least 6 character and match each other')); \r\n    return false; \r\n  }\r\n  //remove del error\r\n  dispatch(removeError()); \r\n  return true; \r\n}\r\n\r\n     return (\r\n<>\r\n         <h3> Register </h3>\r\n\r\n         <form onSubmit={handleRegister}>\r\n           {\r\n             msgError &&\r\n           (\r\n             <div className=\"auth__alert-error\">\r\n              {msgError}\r\n             </div>\r\n           )\r\n           }\r\n         <input \r\n           type=\"text\" \r\n           placeholder=\"Name\" \r\n           name=\"name\"\r\n           className=\"auth__input\" \r\n           autoComplete=\"off\"\r\n           value={name}\r\n           onChange={handleInputChange}\r\n           />\r\n\r\n           <input \r\n           type=\"text\" \r\n           placeholder=\"Email\" \r\n           name=\"email\"\r\n           className=\"auth__input\" \r\n           autoComplete=\"off\"\r\n           value={email}\r\n           onChange={handleInputChange}\r\n           />\r\n\r\n           <input \r\n           type=\"password\" placeholder=\"Password\" name=\"password\" \r\n           className=\"auth__input\"\r\n           autoComplete=\"off\"\r\n           value={password}\r\n           onChange={handleInputChange}\r\n           />\r\n\r\n          <input \r\n           type=\"password\" placeholder=\"Confirm\" name=\"password2\" \r\n           className=\"auth__input\"\r\n           autoComplete=\"off\"\r\n           value={password2}\r\n           onChange={handleInputChange}\r\n           />\r\n\r\n           <button\r\n            type=\"submit\"\r\n            className=\"btn btn-primary btn-block mb-5\"\r\n            > Register</button>\r\n\r\n           <hr />\r\n\r\n           <div>\r\n             <Link\r\n             className=\"link mt-5\"\r\n             to=\"/auth/login\"\r\n             > Already registered?</Link>\r\n           </div>\r\n         </form>\r\n       </>\r\n     )\r\n}\r\n","import React from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport { LoginScreen } from \"../components/auth/LoginScreen\";\r\nimport { RegisterScreen } from \"../components/auth/RegisterScreen\";\r\n\r\nexport const AuthRouter = () => {\r\n  return (\r\n    <div className=\"auth__main\">\r\n      <div className=\"auth__box-container\">\r\n        <Switch>\r\n          {/*\r\n               //router ... no va.. \r\n               path= \"/auth/login\"\r\n               componente= {loginScreen}\r\n\r\n               path= \"/auth/register\"\r\n               componente= {RegisterScreen}\r\n\r\n               // Redirect to path= \"/auth/login\"\r\n               componente= {LoginScreen}\r\n               */}\r\n\r\n          <Route exact path=\"/auth/login\" component={LoginScreen} />\r\n\r\n          <Route exact path=\"/auth/register\" component={RegisterScreen} />\r\n          <Redirect to=\"/auth/register\" />\r\n        </Switch>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react'; \r\nimport PropTypes from 'prop-types'; \r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\nexport const PrivateRoute = ({\r\n     isAuthenticated, \r\n     component: Component, \r\n     ...rest \r\n}) => {\r\n     \r\n     \r\n     return (\r\n       <Route {...rest}\r\n          component={(props)=>(\r\n            (isAuthenticated)\r\n              ? (<Component {...props}/>)\r\n              : (<Redirect to=\"/auth/login\"/>)\r\n          )}\r\n       />           \r\n     )\r\n}\r\n\r\n\r\nPrivateRoute.propTypes={\r\n     isAuthenticated: PropTypes.bool.isRequired, \r\n     component: PropTypes.func.isRequired    \r\n}","import React from 'react'; \r\nimport PropTypes from 'prop-types'; \r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\nexport const PublicRoute = ({\r\n     isAuthenticated, \r\n     component: Component, \r\n     ...rest \r\n}) => {\r\n    \r\n     return (\r\n          <Route {...rest}\r\n               component={(props)=>(\r\n                    (!isAuthenticated)\r\n                         ? (<Component {...props}/>)\r\n                         : (<Redirect to=\"/\"/>)\r\n\r\n               )}\r\n          />                     \r\n     )\r\n}\r\n\r\nPublicRoute.propTypes={\r\n     isAuthenticated: PropTypes.bool.isRequired, \r\n     component: PropTypes.func.isRequired    \r\n}","import React, { useEffect, useState } from \"react\";\r\nimport { BrowserRouter as Router, Switch,  Redirect } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {firebase} from '../firebase/firebase-config'; \r\nimport { JournalScreen } from \"../components/journal/JournalScreen\";\r\nimport { AuthRouter } from \"./AuthRouter\";\r\nimport { login } from \"../actions/auth\";\r\nimport { PrivateRoute } from \"./PrivateRoute\";\r\nimport { PublicRoute } from \"./PublicRoute\";\r\n\r\n\r\nexport const AppRouter = () => {\r\n\r\n   const dispatch = useDispatch();\r\n\r\n   const [checking, setChecking] = useState(true); \r\n   const [isLoggedIn, setIsLoggedIn] = useState(false); \r\n\r\n  useEffect(() => {\r\n    firebase.auth().onAuthStateChanged((user)=>{\r\n      if(user?.uid) {\r\n        dispatch(login(user.uid, user.displayName));\r\n        setIsLoggedIn(true); \r\n      }else {setIsLoggedIn(false);}\r\n\r\n      setChecking(false); \r\n    })\r\n  }, [dispatch, setChecking, setIsLoggedIn])\r\n\r\n  if(checking){\r\n    return(\r\n      <h1>Espere...</h1>\r\n    )\r\n  }\r\n\r\n  \r\n  return (\r\n    <Router>\r\n      <div>\r\n        <Switch>\r\n          <PublicRoute \r\n               path=\"/auth\" \r\n               component={AuthRouter}\r\n               isAuthenticated={isLoggedIn}\r\n           />                     \r\n          <PrivateRoute\r\n            exact path=\"/\"\r\n            component={JournalScreen}\r\n            isAuthenticated={isLoggedIn}\r\n           />\r\n          <Redirect to=\"/auth/login\"/>\r\n          \r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n};\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState= {\r\n     loading: false, \r\n     msgError: null\r\n}\r\n\r\nexport const uiReducer = (state= initialState, action) => {\r\n     switch (action.type) {\r\n          case types.uiSetError:\r\n               return {\r\n                    ...state,\r\n                    msgError: action.payload\r\n               }\r\n          case types.uiRemoveError:\r\n                    return {\r\n                         ...state,\r\n                         msgError: null\r\n                    }\r\n          case types.uiStartLoading: \r\n               return{\r\n                    ...state, \r\n                    loading: true\r\n               }\r\n          case types.uiFinishLoading: \r\n               return{\r\n                    ...state, \r\n                    loading: false\r\n               }\r\n     \r\n          default:\r\n               return state;\r\n     }\r\n}","import {createStore, combineReducers, applyMiddleware, compose} from 'redux'; \r\nimport thunk from 'redux-thunk';\r\nimport { authReducer } from '../reducers/authReducer';\r\nimport { uiReducer } from '../reducers/uiReducer';\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\n\r\nconst reducers=combineReducers({\r\n     auth:authReducer,\r\n     ui: uiReducer\r\n}); \r\n\r\nexport const store= createStore(reducers,\r\n     composeEnhancers(\r\n          applyMiddleware(thunk)\r\n     )\r\n//      window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n); ","/*\r\n{\r\n     uid: , \r\n     name: 'Fernando'\r\n}\r\n*/\r\n\r\nimport { types } from \"../types/types\";\r\n\r\nexport const authReducer=(state={}, action)=>{\r\n\r\n     switch (action.type) {\r\n          case types.Login:\r\n               return{\r\n                   uid: action.payload.uid, \r\n                   name: action.payload.displayName \r\n               }\r\n          case types.Logout: \r\n          return{}             \r\n     \r\n          default:\r\n               return state;\r\n     }\r\n}","import React from 'react';\r\nimport {Provider} from 'react-redux';\r\nimport { AppRouter } from './routers/AppRouter';\r\nimport { store } from './store/store';\r\n\r\n\r\nexport const JournalApp = () => {\r\n     return (\r\n          <Provider store={store}>\r\n              <AppRouter/> \r\n          </Provider>\r\n     )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { JournalApp } from './JournalApp';\nimport './styles/styles.scss'; \n\nReactDOM.render(\n \n    <JournalApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}